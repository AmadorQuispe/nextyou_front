/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardrootImport } from './routes/dashboard/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ChatPageImport } from './routes/chat/page'
import { Route as authLoginPageImport } from './routes/(auth)/login/page'

// Create/Update Routes

const DashboardrootRoute = DashboardrootImport.update({
  id: '/dashboard/__root',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChatPageRoute = ChatPageImport.update({
  id: '/chat/page',
  path: '/chat/page',
  getParentRoute: () => rootRoute,
} as any)

const authLoginPageRoute = authLoginPageImport.update({
  id: '/(auth)/login/page',
  path: '/login/page',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/chat/page': {
      id: '/chat/page'
      path: '/chat/page'
      fullPath: '/chat/page'
      preLoaderRoute: typeof ChatPageImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/__root': {
      id: '/dashboard/__root'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardrootImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login/page': {
      id: '/(auth)/login/page'
      path: '/login/page'
      fullPath: '/login/page'
      preLoaderRoute: typeof authLoginPageImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat/page': typeof ChatPageRoute
  '/dashboard': typeof DashboardrootRoute
  '/login/page': typeof authLoginPageRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat/page': typeof ChatPageRoute
  '/dashboard': typeof DashboardrootRoute
  '/login/page': typeof authLoginPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/chat/page': typeof ChatPageRoute
  '/dashboard/__root': typeof DashboardrootRoute
  '/(auth)/login/page': typeof authLoginPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chat/page' | '/dashboard' | '/login/page'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chat/page' | '/dashboard' | '/login/page'
  id:
    | '__root__'
    | '/'
    | '/chat/page'
    | '/dashboard/__root'
    | '/(auth)/login/page'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatPageRoute: typeof ChatPageRoute
  DashboardrootRoute: typeof DashboardrootRoute
  authLoginPageRoute: typeof authLoginPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatPageRoute: ChatPageRoute,
  DashboardrootRoute: DashboardrootRoute,
  authLoginPageRoute: authLoginPageRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chat/page",
        "/dashboard/__root",
        "/(auth)/login/page"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/chat/page": {
      "filePath": "chat/page.tsx"
    },
    "/dashboard/__root": {
      "filePath": "dashboard/__root.tsx"
    },
    "/(auth)/login/page": {
      "filePath": "(auth)/login/page.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
